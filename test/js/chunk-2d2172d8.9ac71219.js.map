{"version":3,"sources":["webpack:///./src/store/Main/city.js"],"names":["namespaced","moduleName","state","cities","citiesIsReady","currentCity","undefined","modalIsOpened","getters","mutations","setCities","_cities","forEach","city","id","setCityIsReady","setCurrentCity","cityId","openModal","closeModal","actions","loadCities","commit","dispatch","$requests","citites","success","data","result","length","currentCityFromLS","localStorage","getItem","root","rootGetters","setItem","setTimeout"],"mappings":"yKAEe,cACbA,YAAY,EACZC,WAAY,OACZC,MAAO,CACLC,OAAQ,GACRC,eAAe,EACfC,iBAAaC,EACbC,eAAe,GAEjBC,QAAS,CACPL,OAAQ,SAACD,GAAD,OAAWA,EAAMC,QACzBC,cAAe,SAACF,GAAD,OAAWA,EAAME,eAChCC,YAAa,SAACH,GAAD,OAAWA,EAAMG,aAC9BE,cAAe,SAACL,GAAD,OAAWA,EAAMK,gBAElCE,UAAW,CACTC,UAAW,SAACR,EAAOC,GACjB,IAAMQ,EAAU,GAChBR,EAAOS,SAAQ,SAAAC,GACbF,EAAQE,EAAKC,IAAMD,KAErBX,EAAMC,OAASQ,GAEjBI,eAAgB,SAACb,GAAD,OAAWA,EAAME,eAAgB,GACjDY,eAAgB,SAACd,EAAOe,GAAR,OAAmBf,EAAMG,YAAcH,EAAMC,OAAOc,IACpEC,UAAW,SAAChB,GAAD,OAAWA,EAAMK,eAAgB,GAC5CY,WAAY,SAACjB,GAAD,OAAWA,EAAMK,eAAgB,IAE/Ca,QAAS,CACPC,WAAY,WAAF,8CAAE,sHAASC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,SAAUf,EAA3B,EAA2BA,QAA3B,SACYgB,OAAUrB,SADtB,OACJsB,EADI,OAENA,EAAQC,SAAR,UAAmBD,EAAQE,KAAKC,cAAhC,OAAmB,EAAqBC,SAC1CP,EAAO,YAAaG,EAAQE,KAAKC,QACjCN,EAAO,mBAEHQ,EAAoBC,aAAaC,QAAQ,eAC/CV,EAAO,uBAAmBhB,EAAW,CAAE2B,MAAM,IACnB,OAAtBH,GAA8BA,KAAqBtB,EAAQL,OAC7DoB,EAAS,iBAAkBO,GAE3BR,EAAO,aAXC,2CAAF,sDAAE,GAcZN,eAAgB,WAAoCC,GAAW,IAA5CK,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,SAAUW,EAA0B,EAA1BA,YACnCH,aAAaI,QAAQ,cAAelB,GACpCK,EAAO,iBAAkBL,GACrBiB,EAAY,+BACdZ,EAAO,yBAAqBhB,EAAW,CAAE2B,MAAM,IAC/CX,EAAO,8BAA0BhB,EAAW,CAAE2B,MAAM,IACpDG,YAAW,kBAAMb,EAAS,0BAA2BW,EAAY,6BAA8B,CAAED,MAAM","file":"js/chunk-2d2172d8.9ac71219.js","sourcesContent":["import $requests from '../../requests';\n\nexport default {\n  namespaced: true,\n  moduleName: 'city',\n  state: {\n    cities: {},\n    citiesIsReady: false,\n    currentCity: undefined,\n    modalIsOpened: false,\n  },\n  getters: {\n    cities: (state) => state.cities,\n    citiesIsReady: (state) => state.citiesIsReady,\n    currentCity: (state) => state.currentCity,\n    modalIsOpened: (state) => state.modalIsOpened,\n  },\n  mutations: {\n    setCities: (state, cities) => {\n      const _cities = {};\n      cities.forEach(city => {\n        _cities[city.id] = city;\n      });\n      state.cities = _cities;\n    },\n    setCityIsReady: (state) => state.citiesIsReady = true,\n    setCurrentCity: (state, cityId) => state.currentCity = state.cities[cityId],\n    openModal: (state) => state.modalIsOpened = true,\n    closeModal: (state) => state.modalIsOpened = false,\n  },\n  actions: {\n    loadCities: async ({ commit, dispatch, getters }) => {\n      const citites = await $requests.cities();\n      if (citites.success && citites.data.result?.length) {\n        commit('setCities', citites.data.result);\n        commit('setCityIsReady');\n      }\n      const currentCityFromLS = localStorage.getItem('currentCity');\n      commit('unsetAppLoading', undefined, { root: true });\n      if (currentCityFromLS !== null && currentCityFromLS in getters.cities) {\n        dispatch('setCurrentCity', currentCityFromLS);\n      } else {\n        commit('openModal');\n      }\n    },\n    setCurrentCity: ({ commit, dispatch, rootGetters }, cityId) => {\n      localStorage.setItem('currentCity', cityId);\n      commit('setCurrentCity', cityId);\n      if (rootGetters['calendar/haveCalendarPage']) {\n        commit('event/clearEvents', undefined, { root: true });\n        commit('calendar/clearCalendar', undefined, { root: true });\n        setTimeout(() => dispatch('calendar/setCurrentPage', rootGetters['calendar/currentYearMonth'], { root: true }));\n      }\n    },\n  },\n};\n"],"sourceRoot":""}